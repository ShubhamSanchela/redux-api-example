{"version":3,"sources":["logo.svg","actions/types.jsx","actions/postAction.jsx","components/Posts.jsx","components/PostForm.jsx","reducers/postReducers.jsx","reducers/index.jsx","Store.jsx","App.js","reportWebVitals.js","index.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","console","log","fetch","then","res","json","posts","type","payload","Posts","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","unshift","postItems","this","map","post","title","body","id","style","textAlign","Component","connect","state","items","item","PostForm","onChange","e","setState","target","name","value","onSubmit","preventDefault","reset","createPost","className","prototypes","PropTypes","func","isRequired","postData","method","headers","JSON","stringify","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd6717c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const NEW_POST = \"NEW_POST\";","import { NEW_POST, FETCH_POSTS } from \"./types\";\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n  console.log(\"fetching\")\r\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then((res) => res.json())\r\n    .then((posts) =>\r\n      dispatch({\r\n        type: FETCH_POSTS,\r\n        payload: posts,\r\n      })\r\n    );\r\n};\r\n\r\n\r\nexport const createPost = postData => dispatch => {\r\n  fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(postData),\r\n  })\r\n  .then((res) => res.json())\r\n  .then(post => dispatch({\r\n    type : NEW_POST,\r\n    payload : post\r\n  }));\r\n  console.log(\"action called\" )\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPosts } from \"../actions/postAction\";\r\n\r\nclass Posts extends Component {\r\n  componentWillMount = () => {\r\n    this.props.fetchPosts();\r\n    console.log(fetchPosts());\r\n  };\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    if(nextProps.newPost){\r\n      this.props.posts.unshift(nextProps.newPost);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const postItems = this.props.posts.map((post) => (\r\n      <div key={post.id}>\r\n        <h3>{post.title}</h3>\r\n        <p>{post.body}</p>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <h1 style={{ textAlign: \"center\" }}>Posts</h1>\r\n        {postItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  fetchPosts : PropTypes.func.isRequired,\r\n  posts : PropTypes.array.isRequired,\r\n  newPost : PropTypes.object\r\n}\r\n\r\nconst mapStateToprops = (state) => ({\r\n  posts: state.posts.items,\r\n  newPost : state.posts.item\r\n});\r\n\r\nexport default connect(mapStateToprops, { fetchPosts })(Posts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../actions/postAction\";\r\n\r\n class PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      body: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    const post = {\r\n      title: this.state.title,\r\n      body: this.state.body,\r\n    };\r\n\r\n    // Call  Action\r\n    this.props.createPost(post);\r\n  };\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Post Form</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div>\r\n            <label>Title : </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Body : </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"body\"\r\n              value={body}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn\" value={body}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.prototypes = {\r\n  createPost : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createPost } )(PostForm);","import { NEW_POST, FETCH_POSTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  item: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      console.log(\"reducers\");\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n      case NEW_POST : \r\n      return {\r\n        ...state,\r\n        item: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./postReducers\";\r\n\r\nexport default combineReducers({\r\n    posts : postReducer\r\n})","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nconsole.log(store);\r\n\r\nexport default store;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Posts from \"./components/Posts\";\nimport PostForm from \"./components/PostForm\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <PostForm />\n          ---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n          <Posts />\n        </header>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}